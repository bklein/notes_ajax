require 'sinatra'
require 'data_mapper'

DataMapper::setup(:default, "sqlite3://#{Dir.pwd}/recall.db")

class Note
  include DataMapper::Resource
  property :id, Serial
  property :content, Text, :required => true
  property :complete, Boolean, :required => true, :default => false
  property :created_at, DateTime
  property :updated_at, DateTime
end

DataMapper.finalize.auto_upgrade!

Note.raise_on_save_failure = true

get "/" do
  @notes = Note.all :order => :id.desc
  @title = "All Notes"
  erb :home
end

post "/" do
	@title = "New Title" 
  note = Note.new
  note.content = params[:content]
  note.created_at = Time.now
  note.updated_at = Time.now
  note.save
	if request.xhr?
		redirect '/'
	else
		erb :task, :layout => false, :locals => {:note => note}
	end
end

get '/:id' do
  @note = Note.get params[:id]
  @title = "Edit note ##{params[:id]}"
  erb :edit, :layout => (request.xhr? ? false : :layout)
end

put '/:id' do
	@title = "Edit Note"
  n = Note.get params[:id]
  n.content = params[:content]
  n.complete = params[:complete] ? 1: 0
  n.updated_at = Time.now
  n.save
  erb :task, :locals => {:note => n}, :layout => (request.xhr? ? false : :layout)
end

get '/:id/delete' do
  @note = Note.get params[:id]
  @title = "Confirm deletion of note ##{params[:id]}"
  erb :delete
end

delete '/:id' do 
  n = Note.get params[:id]
  n.destroy
  redirect '/'
end

get '/:id/complete' do
  n = Note.get params[:id]
  n.complete = n.complete ? 0 : 1
  n.updated_at = Time.now
  n.save
  redirect '/'
end

